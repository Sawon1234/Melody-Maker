#all octave reduce
sample = [(625, 0, 32.528224679454084), (705, 0, 32.595429749808133), (781, 0, 33.409962260936339), (879, 0, 35.269026454708893), (975, 0, 36.022737742234334), (1013, 0, 32.852320552831095), (1057, 0, 31.888442710207315), (1087, 0, 31.334903792250604), (1127, 0, 31.459502435720637), (1153, 0, 31.449547153111169), (1233, 0, 28.681110557514277), (1283, 0, 28.699757270545334), (1374, 0, 22.906806426622644), (1425, 0, 20.428132745815564), (1453, 0, 20.798973120437118), (1499, 0, 20.497001861789737), (1550, 0, 11.145698996154479), (1583, 0, 10.950302606186415), (25, 25, 53.369637986602697), (104, 27, 49.99429840337443), (194, 28, 50.834086865961972), (298, 29, 52.94224482415239), (1433, 29, 23.290596987929355), (1456, 29, 23.245794947335085), (377, 31, 54.891340115324915), (444, 32, 57.120628088820347), (631, 33, 48.468749919996661), (539, 34, 54.547447272405485), (701, 37, 49.449616306314269), (786, 38, 48.708272770487476), (806, 39, 48.664966178087411), (1060, 40, 38.373035382950427), (1223, 40, 37.638701402384058), (1264, 40, 33.984886061998914), (881, 41, 50.991967010022314), (1131, 41, 40.604022976277079), (1160, 42, 41.506696671908983), (1311, 42, 30.302507472588584), (978, 44, 51.915839614636845), (13, 62, 43.885570742375634), (98, 63, 36.362616924003966), (780, 67, 39.321466697673145), (946, 69, 25.100293286635562), (1070, 72, 23.1334367471616), (239, 78, 22.848105724409365), (282, 84, 27.596621284976877), (381, 87, 23.3288755515138), (99, 90, 29.835335709389362), (699, 102, 18.714961719363757), (779, 106, 17.346494332824157), (190, 115, 20.797388905119242), (490, 116, 11.199320589255365), (17, 117, 19.58269614967811)]
# full scale
sample2 = [(151, 0, 12.01018334333588), (196, 0, 12.410418084722597), (314, 0, 14.248706115684993), (358, 0, 12.325271953791272), (400, 0, 12.721350549949191), (427, 0, 11.743124157375464), (576, 0, 13.582437278636943), (603, 0, 12.314306106131841), (663, 0, 13.440094287980637), (716, 0, 13.229772745384773), (906, 0, 14.224697692903856), (950, 0, 12.328417122568451), (989, 0, 12.63526858771151), (2779, 0, 11.635334820887106), (3417, 0, 13.646446773545719), (3454, 0, 12.773938422304161), (3498, 0, 12.316646438026888), (3531, 0, 12.142377755877103), (3669, 0, 15.635472345887818), (3708, 0, 12.979732244721587), (3789, 0, 12.286015879580166), (3817, 0, 11.353521561584012), (3866, 0, 11.393196764422665), (3903, 0, 11.399753063542967), (4044, 0, 13.804585296421168), (4072, 0, 12.062926729273077), (4170, 0, 12.529101039516865), (4210, 0, 12.368455187615517), (4255, 0, 11.588854339910245), (1049, 26, 53.285305950389052), (1340, 26, 34.250005545510376), (2129, 27, 50.178622491660548), (2371, 27, 30.886891415712), (1751, 28, 47.976904743943621), (1782, 28, 46.314769905149888), (2029, 28, 31.234042736687371), (3006, 30, 51.242234365034882), (3165, 30, 35.73192769485302), (2479, 31, 54.069602033847417), (2621, 31, 37.308767865632653), (2883, 31, 30.593760368377126), (3298, 33, 55.230954867987528), (4065, 34, 36.172214481045657), (4178, 34, 38.835043101534716), (3588, 35, 47.230256792033593), (3961, 35, 52.374306557740098), (4301, 35, 15.842954574005777), (3652, 36, 30.341207394408286), (3761, 36, 22.594336020468848), (227, 38, 47.647959631528508), (342, 38, 38.602240925377394), (3, 40, 46.463331285466118), (26, 40, 45.064691461253112), (154, 40, 28.694115992717869), (813, 42, 49.932671597961459), (911, 42, 28.987523742108664), (497, 44, 52.600644748054791), (593, 44, 31.858659190813277), (683, 44, 37.351596986048357), (1215, 46, 29.487640403053973), (1926, 50, 23.299399527996631), (1037, 62, 43.982988684141446), (1523, 62, 15.033281884432357), (3618, 62, 29.970532278830255), (3682, 62, 27.762820798718671), (3853, 62, 16.596155353779206), (2128, 63, 34.388235196113342), (2342, 65, 18.156757094634195), (94, 67, 21.230851246365138), (5, 68, 37.049892006332087), (845, 70, 28.041693034284556), (909, 70, 23.596014834178909), (592, 73, 21.086446033772994), (1137, 76, 24.991917156810317), (1234, 76, 18.153788321803155), (1360, 76, 15.756991437278279), (3413, 76, 19.587944684427331), (1833, 82, 11.766818152584717), (1943, 82, 10.289451178461951), (3589, 82, 28.007053865294754), (2984, 85, 27.027210634653013), (3053, 85, 17.53667664603088), (2481, 88, 21.724175505932838), (2526, 88, 15.682308647740793), (2129, 91, 29.13544559113253), (2192, 91, 16.481124062203744), (2254, 91, 18.872866636382053), (2322, 91, 16.883491353206619), (225, 101, 18.451972234006931), (261, 101, 11.302256649178213), (4, 106, 15.782087181690601), (4006, 108, 10.071240502543336), (1748, 115, 20.694472357244994), (3344, 116, 10.492992517036031), (1041, 117, 19.511734377847358)]
# jingle bells
sample3 = [(962, 0, 26.471455637359107), (1921, 0, 25.093668812528623), (2154, 0, 25.552335038171119), (2281, 0, 25.634032332833105), (2371, 0, 27.269738633618626), (2400, 0, 25.987047744269312), (2458, 0, 25.263217846752273), (2495, 0, 24.943106951958605), (2677, 0, 28.038191920975986), (3781, 0, 29.764609271869599), (3846, 0, 29.803434163198439), (3952, 0, 30.480667704662864), (4000, 0, 29.708910515438216), (4051, 0, 28.56638496085565), (4096, 0, 27.643295054222161), (4564, 0, 23.089082697318478), (4601, 0, 23.028287269999463), (5085, 0, 26.373811041598131), (5138, 0, 26.271988567564328), (6019, 0, 24.707372810745554), (6056, 0, 24.816004338777145), (6128, 0, 23.289914526637382), (6247, 0, 27.134801510827021), (6292, 0, 25.6907540135802), (6553, 0, 25.749316627539574), (6793, 0, 28.502638140327704), (7309, 0, 29.672589023499182), (7331, 0, 29.005992931901773), (7460, 0, 29.288193580281863), (7539, 0, 30.180622377272961), (7568, 0, 29.224762169641902), (7912, 0, 28.761725701082995), (1319, 26, 53.540682248998209), (5451, 26, 53.689682303789404), (7777, 26, 54.106893782421366), (8021, 27, 38.029224674142661), (1507, 28, 48.934870077033651), (1540, 28, 48.100339185348027), (1899, 28, 33.683171131802951), (5641, 28, 48.47118618072119), (5674, 28, 47.982872544397253), (6044, 28, 34.196477191000206), (7644, 28, 48.347843565355468), (7956, 28, 35.474977706307577), (8054, 28, 38.500602059335534), (8081, 28, 38.447438442120522), (8124, 28, 38.811014252772885), (8157, 28, 38.709061431231071), (8200, 28, 37.253297253292359), (8393, 28, 31.025310775842769), (1720, 29, 42.685625508465812), (1753, 29, 42.75851823395169), (1791, 29, 41.027328295667971), (1985, 29, 34.782531697068961), (2023, 29, 34.367310417954606), (3278, 29, 49.874239285396669), (3378, 29, 49.546230973825701), (3408, 29, 48.88166595908227), (3670, 29, 49.741373708626341), (5887, 29, 42.449086819697648), (5925, 29, 41.543085274663838), (6115, 29, 35.087638659253436), (8237, 29, 36.546309023596208), (8270, 29, 36.506939469700527), (8313, 29, 34.866070614611729), (8350, 29, 32.606716191371355), (1583, 30, 56.239968928854147), (3249, 30, 50.820109138131897), (3637, 30, 49.310681352107295), (5717, 30, 55.918427638799884), (5855, 30, 42.466340279776901), (6153, 30, 34.192014399593603), (35, 31, 54.134656119661173), (156, 31, 53.203859180560073), (293, 31, 52.585488460545605), (552, 31, 54.283272363612454), (681, 31, 53.846315273868399), (802, 31, 52.793005763919119), (1068, 31, 54.229786172743175), (2748, 31, 54.199295450980848), (2881, 31, 53.262263537419081), (3004, 31, 52.666906664590385), (3063, 31, 55.454232573044131), (3125, 31, 55.403926821023823), (3523, 31, 56.031027003421642), (3953, 31, 39.677781111990356), (4169, 31, 53.980477200657326), (4296, 31, 53.291180809133877), (4429, 31, 52.51694816158502), (4686, 31, 54.345417033921343), (4807, 31, 53.938896557946464), (4936, 31, 52.72936870543645), (5203, 31, 54.260122244456397), (6880, 31, 54.332183158796823), (7007, 31, 53.51553467996807), (7136, 31, 52.928762709805845), (7197, 31, 55.790190906634827), (7249, 32, 55.197411543746099), (1241, 33, 38.04740247841093), (2082, 33, 55.424396273347078), (2210, 33, 55.735788593602493), (2339, 33, 55.027010259282314), (2534, 33, 55.803389965101431), (2599, 33, 53.277653145860036), (3890, 33, 50.348968003802085), (5311, 33, 50.420976583799266), (5381, 33, 37.719888814922086), (6216, 33, 55.213860743264355), (6345, 33, 55.573031921942153), (6473, 33, 54.944123705815727), (6603, 33, 54.949095809521118), (6733, 33, 54.950134066362246), (7507, 33, 55.170873086128609), (1177, 34, 50.396949013299484), (7378, 34, 48.468434930378749), (496, 54, 32.216515403744111), (4634, 55, 32.161274628973388), (6833, 57, 28.753479885221957), (1210, 59, 31.90137846417306), (5343, 59, 31.537716948075452), (7409, 60, 33.166361722825187), (3921, 61, 30.069834761773944), (1305, 62, 43.307641548708517), (3984, 62, 27.986643619152467), (5441, 62, 43.127143671887332), (7285, 62, 30.082307023377531), (7765, 62, 44.173501314731361), (2639, 76, 29.617817847003035), (8088, 76, 17.01640427360482), (1178, 82, 28.132189552472077), (3460, 82, 14.51979201452205), (3891, 82, 27.549512743269705), (5312, 82, 27.873053351948023), (7250, 82, 28.16795092325593), (3815, 83, 11.007826449991287), (3333, 86, 14.566597864421571), (36, 88, 21.729556986573456), (82, 88, 15.647908124740779), (165, 88, 22.220345680546952), (218, 88, 16.470372838177184), (297, 88, 23.279992267911382), (347, 88, 15.910528352455595), (553, 88, 22.944549916985189), (593, 88, 17.777301454491109), (682, 88, 22.28144653625144), (734, 88, 16.588377055370209), (814, 88, 23.222155612096074), (864, 88, 16.057840459467275), (1070, 88, 22.865330446039472), (1110, 88, 17.749212672373748), (2881, 88, 22.82162278764693), (3008, 88, 23.523743229194885), (3126, 88, 25.668580026424983), (3201, 88, 16.538512119633282), (3527, 88, 21.708769049215345), (3568, 88, 16.750938255802165), (4173, 88, 21.668461255476878), (4211, 88, 15.74229292091233), (4300, 88, 22.300635612544205), (4352, 88, 16.41834386924404), (4429, 88, 23.40635061965369), (4481, 88, 15.959640494566436), (4690, 88, 22.762254321771948), (4728, 88, 17.806427480525095), (4819, 88, 22.318987184448869), (4869, 88, 16.486831040190459), (4946, 88, 23.330599290427827), (4998, 88, 16.042365529505965), (5204, 88, 22.908026588676613), (5245, 88, 17.806533734670232), (7013, 88, 22.839709026950864), (7142, 88, 23.497700423235926), (2750, 89, 22.459536485939648), (6924, 89, 16.484646687331935), (2212, 91, 25.12961576572831), (2431, 91, 15.294409261575872), (2693, 91, 16.809010901406417), (6347, 91, 25.320138524777942), (6566, 91, 15.308934545637969), (6697, 91, 15.972972697394859), (6826, 91, 15.4168002309545), (1220, 99, 11.838542725308642), (198, 101, 15.129205846399135), (708, 101, 15.560247101570132), (2910, 101, 14.61727901820006), (4331, 101, 15.060827632071705), (4847, 101, 15.514628441508901), (7168, 101, 16.500367485122656), (1504, 115, 20.531689427200103), (3248, 115, 20.531745807409077), (3377, 115, 19.951581005561067), (3635, 115, 20.275862700660596), (5638, 115, 20.649517794193038), (7640, 115, 20.148397510389763), (2127, 116, 10.511763455250168), (2256, 116, 10.848258459300954), (2385, 116, 10.652916801540588), (6261, 116, 10.49552697908344), (6391, 116, 10.876354445376375), (6520, 116, 10.6297387101396), (6649, 116, 10.789589572777572), (6778, 116, 10.634062686367677), (1309, 117, 19.579591141560904), (5443, 117, 19.451132775763785), (2337, 128, 14.472117502399282), (6471, 128, 15.12584944334762)]

notes = {'G5': [(135, 0, 12.604781455137843), (171, 0, 11.737938947750848), (216, 0, 12.392250384542434), (244, 0, 11.365484626315761), (280, 0, 11.358991830327918), (14, 34, 48.751803840614357), (78, 36, 30.43510529833074), (188, 36, 22.606285755585567), (45, 62, 30.208395043234542), (108, 62, 27.793259087413599), (279, 62, 16.573913172789652), (15, 82, 27.958877901908579)], 'F5': [(133, 0, 13.195365656931688), (169, 0, 13.080777302119944), (213, 0, 12.215638004001409), (246, 0, 11.891965106487742), (283, 0, 11.839433742423333), (331, 0, 14.181614920232979), (356, 0, 12.902436451773339), (393, 0, 11.794023282396999), (438, 0, 11.806662548114822), (15, 33, 55.264984469880929), (294, 33, 27.812098931547141), (456, 33, 14.786861630726566), (437, 57, 17.792101355932722), (129, 76, 19.589549183162415), (292, 76, 15.597321927717282), (60, 116, 10.470795176740735)], 'B5': [(110, 0, 13.76625057200946), (145, 0, 12.094032271863856), (197, 0, 13.414871427541325), (250, 0, 12.942448186833527), (283, 0, 11.519110204055492), (31, 44, 52.558171504109836), (127, 44, 31.855810124490919), (217, 44, 37.353808704610842), (123, 73, 21.092190647230318)], 'Eb5': [(46, 30, 51.191771937333485), (207, 30, 35.733242896952454), (23, 85, 27.69256497867929), (92, 85, 17.587430072368637)], 'Gb5': [(106, 0, 13.758906670358646), (138, 0, 12.080828858223562), (232, 0, 12.714545232760193), (272, 0, 12.016937838099054), (317, 0, 11.575255658790777), (366, 0, 11.572220354920479), (127, 34, 36.173347973031255), (240, 34, 38.836586622256476), (23, 35, 52.374323708644027), (384, 35, 21.025452540188951), (68, 108, 10.037303553170538)], 'A5': [(151, 0, 12.010825182067645), (190, 0, 11.88483819549746), (218, 0, 11.9716639491803), (255, 0, 11.241491096193998), (3, 40, 46.463320871079148), (26, 40, 45.064663947413557), (154, 40, 28.694301979666058), (259, 40, 21.761626343730285), (94, 67, 21.230581330317516), (209, 67, 19.65485410896801), (255, 67, 19.123834180543838), (5, 68, 37.049747588135197), (4, 106, 15.78192308277708)], 'Ab5': [(95, 0, 13.904564518559573), (143, 0, 12.235948319266077), (184, 0, 12.227678321458832), (216, 0, 11.884625750268548), (254, 0, 11.616520420537293), (283, 0, 11.333274995928473), (321, 0, 11.248976364391952), (12, 38, 47.731860595259349), (127, 38, 38.590365600399252), (271, 38, 24.611051784811927), (326, 38, 23.555207158586388), (10, 101, 18.998415274335365), (44, 101, 11.222348979792331)], 'E5': [(521, 0, 11.518386592577253), (574, 0, 11.670093237610079), (35, 31, 54.134656119661173), (178, 31, 37.303167503598566), (436, 31, 30.600997751941623), (570, 55, 18.244180789871898), (36, 88, 21.729556986573456), (82, 88, 15.647908124740779)], 'Bb5': [(151, 0, 12.601156721516219), (196, 0, 12.931730311346737), (220, 0, 12.24860813098681), (20, 42, 50.15924895926365), (119, 42, 28.97948337926384), (241, 42, 25.058315586073693), (52, 70, 28.12327512577982), (116, 70, 23.632645310620084)], 'D5': [(22, 28, 47.794219082046212), (53, 28, 46.385709358787977), (297, 28, 31.242878544360522), (194, 50, 23.311783387006738), (103, 82, 11.793116649795204), (212, 82, 10.24186037701204), (18, 115, 20.716390460842248)], 'Db5': [(13, 27, 50.793839583120963), (261, 27, 30.889315800759412), (535, 27, 33.127352493248424), (12, 63, 34.23725571789803), (228, 65, 18.145742582824219), (13, 91, 29.173765730365982), (77, 91, 16.474851802833747), (137, 91, 18.853122634548384), (205, 91, 16.858223452531803)], 'C5': [(25, 25, 53.369620829316275), (316, 26, 34.249203680800562), (190, 46, 29.488329973439349), (13, 62, 43.885562080985991), (499, 62, 15.074126218276419), (114, 76, 24.994308561295146), (211, 76, 18.186733673180793), (336, 76, 15.731581792571491), (17, 117, 19.582824534314337)]}
import math
import sys
import numpy as np
def before_time(peaks, t):
    return [p for p in peaks if p[0] < t ]

def after_time(peaks, t):
    return [p for p in peaks if p[0] > t ]

def distance_peak(p1, p2):
    return math.sqrt(sum([(p1[0] - p2[0])**2, (p1[1] - p2[1])**2, (p1[2] - p2[2])**2]))

# def distance_peak(p1, p2):
#     return math.sqrt(sum([(p1[0] - p2[0])**2, (p1[1] - p2[1])**2]))




def trans_invariant(pl1, pl2):
    minpl1 = min([p[0] for p in pl1])
    minpl2 = min([p[0] for p in pl2])
    newpl1 = [(p[0] - minpl1, p[1], p[2]) for p in pl1]
    newpl2 = [(p[0] - minpl2, p[1], p[2]) for p in pl2]
    return newpl1, newpl2, (minpl1 - minpl2)


def distance_peak_list(pl1, pl2):
    if len(pl1) == 0 or len(pl2) == 0:
        return sys.maxint, None
    pl1, pl2, trans = trans_invariant(pl1, pl2)
    error = []
    for p1 in pl1:
        dist_p1 = sys.maxint
        for p2 in pl2:
            dist = distance_peak(p1, p2)
            if dist < dist_p1:
                dist_p1 = dist
        error.append(dist_p1)
    for p1 in pl2:
        dist_p1 = sys.maxint
        for p2 in pl1:
            dist = distance_peak(p1, p2)
            if dist < dist_p1:
                dist_p1 = dist
        error.append(dist_p1)
    error = sorted(error) [ : len(error) // 2]
    error = sum(error) / len(error)
    return (error, trans)

def match_best_note(sample, end = None, beg = 0):
    if end:
        sample = before_time(sample, end)
    sample = after_time(sample, beg)
    best_match = None
    best_fit = sys.maxint
    best_trans = None
    for note in notes.keys():
        dist, trans = distance_peak_list(sample, before_time(notes[note], end-beg))
        if dist < best_fit:
            best_fit = dist
            best_match = note
            best_trans = trans
    return (best_match, best_fit, trans)

last = 100
sample = sample3
sample = [p for p in sample if not p[1] == 0]

first = before_time(sample, last)
print(first)
print(before_time(notes['C5'],last))
print(distance_peak_list(first, before_time(notes['C5'],last) ))
lasttime = max([p[0] for p in sample])
res = []
for i in np.arange(0,lasttime/last,0.5):
    note, fit, trans = match_best_note(sample, beg = i*last, end=(i+1)*last)
#     print(note, fit, trans)
    if fit < 3.0  and (len(res) == 0 or not res[-1] == (note, trans)):
        res.append((note, trans))
        print(res[-1])
